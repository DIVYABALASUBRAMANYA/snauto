{"name": "test_request_module_end_user[chrome-Editorial-Medium-TEST SUM-8123979546.0-DESC TEST]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <Pages.RequestModuleEndUser.RequestModuleEndUser object at 0x7fea38756d00>, category = 'Editorial', urgency = 'Medium', summary = 'TEST SUM', contact_number = 8123979546.0, description = 'DESC TEST'\n\n    def fill_request_module_end_user(self, category,urgency,summary, contact_number, description):\n        try:\n            self.click(Locators.SEARCH_TEXTBOX_MODULE_END_USER)\n            self.enter_text(Locators.SEARCH_TEXTBOX_MODULE_END_USER, \"I need Something\")\n            self.send_enter(Locators.SEARCH_TEXTBOX_MODULE_END_USER)\n            self.click(Locators.I_NEED_SOMETHING_CLICK)\n    \n            self.click(Locators.TITLE_I_NEED_SOMETHING)\n    \n            self.select_category(category)\n            self.choose_urgency(urgency)\n            self.fill_summary(summary)\n>           self.fill_contact_phone_number(contact_number)\n\nPages/RequestModuleEndUser.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.RequestModuleEndUser.RequestModuleEndUser object at 0x7fea38756d00>, phone_number = 8123979546.0\n\n    def fill_contact_phone_number(self, phone_number):\n        self.click(Locators.CONTACT_NUMBER_REQUEST_TEXTBOX)\n>       self.enter_text(Locators.CONTACT_NUMBER_REQUEST_TEXTBOX, phone_number)\n\nPages/RequestModuleEndUser.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.RequestModuleEndUser.RequestModuleEndUser object at 0x7fea38756d00>, by_locator = ('id', 'sp_formfield_contact_number1'), text = 8123979546.0\n\n    def enter_text(self, by_locator, text):\n>       return WebDriverWait(self.driver, 8000).until(EC.visibility_of_element_located(by_locator)).send_keys(text)\n\nPages/BasePage.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.webelement.WebElement (session=\"7907191362d2f5d5e00a8fc09c96a4d1\", element=\"d0262ca1-093c-479d-924e-ea865a6e5c00\")>, value = (8123979546.0,)\n\n    def send_keys(self, *value):\n        \"\"\"Simulates typing into the element.\n    \n        :Args:\n            - value - A string for typing, or setting form fields.  For setting\n              file inputs, this could be a local file path.\n    \n        Use this to send simple key events or to fill out form fields::\n    \n            form_textfield = driver.find_element_by_name('username')\n            form_textfield.send_keys(\"admin\")\n    \n        This can also be used to set file inputs.\n    \n        ::\n    \n            file_input = driver.find_element_by_name('profilePic')\n            file_input.send_keys(\"path/to/profilepic.gif\")\n            # Generally it's better to wrap the file path in one of the methods\n            # in os.path to return the actual path to support cross OS testing.\n            # file_input.send_keys(os.path.abspath(\"path/to/profilepic.gif\"))\n    \n        \"\"\"\n        # transfer file to another machine only if remote driver is used\n        # the same behaviour as for java binding\n        if self.parent._is_remote:\n            local_file = self.parent.file_detector.is_local_file(*value)\n            if local_file is not None:\n                value = self._upload(local_file)\n    \n        self._execute(Command.SEND_KEYS_TO_ELEMENT,\n>                     {'text': \"\".join(keys_to_typing(value)),\n                       'value': keys_to_typing(value)})\n\n../../Library/Python/3.9/lib/python/site-packages/selenium/webdriver/remote/webelement.py:478: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nvalue = (8123979546.0,)\n\n    def keys_to_typing(value):\n        \"\"\"Processes the values that will be typed in the element.\"\"\"\n        typing = []\n        for val in value:\n            if isinstance(val, Keys):\n                typing.append(val)\n            elif isinstance(val, int):\n                val = str(val)\n                for i in range(len(val)):\n                    typing.append(val[i])\n            else:\n>               for i in range(len(val)):\nE               TypeError: object of type 'float' has no len()\n\n../../Library/Python/3.9/lib/python/site-packages/selenium/webdriver/common/utils.py:150: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <TestCases.test_Request_Module_End_User.TestRequestModuleEndUser object at 0x7fea3876d4f0>, category = 'Editorial', urgency = 'Medium', summary = 'TEST SUM', contact_number = 8123979546.0\ndescription = 'DESC TEST'\n\n    @pytest.mark.parametrize('category,urgency,summary, contact_number, description', read_data(\"I need Something\"))\n    def test_request_module_end_user(self, category, urgency, summary, contact_number, description):\n        self.driver.get(\"https://supporttest.condenastint.com/sp\")\n        time.sleep(3)\n        login_cred_obj = LoginCred(self.driver)\n        login_cred_obj.login_cred()\n        time.sleep(40)\n        self.request_module_end_use_obj = RequestModuleEndUser(self.driver)\n>       self.request_module_end_use_obj.fill_request_module_end_user(category,urgency,summary, contact_number, description)\n\nTestCases/test_Request_Module_End_User.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.RequestModuleEndUser.RequestModuleEndUser object at 0x7fea38756d00>, category = 'Editorial', urgency = 'Medium', summary = 'TEST SUM', contact_number = 8123979546.0, description = 'DESC TEST'\n\n    def fill_request_module_end_user(self, category,urgency,summary, contact_number, description):\n        try:\n            self.click(Locators.SEARCH_TEXTBOX_MODULE_END_USER)\n            self.enter_text(Locators.SEARCH_TEXTBOX_MODULE_END_USER, \"I need Something\")\n            self.send_enter(Locators.SEARCH_TEXTBOX_MODULE_END_USER)\n            self.click(Locators.I_NEED_SOMETHING_CLICK)\n    \n            self.click(Locators.TITLE_I_NEED_SOMETHING)\n    \n            self.select_category(category)\n            self.choose_urgency(urgency)\n            self.fill_summary(summary)\n            self.fill_contact_phone_number(contact_number)\n            self.fill_description(description)\n            self.click_submit()\n            # self.fetch_text()\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"I need Something\",\n                          attachment_type=AttachmentType.PNG)\n    \n        except:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"I need Something\",\n                          attachment_type=AttachmentType.PNG)\n>           assert False\nE           AssertionError\n\nPages/RequestModuleEndUser.py:100: AssertionError"}, "attachments": [{"name": "I need Something", "source": "7f4a9e44-0c02-4a7c-9f58-6e223ed8bf00-attachment.png", "type": "image/png"}], "parameters": [{"name": "init_driver", "value": "'chrome'"}, {"name": "category", "value": "'Editorial'"}, {"name": "urgency", "value": "'Medium'"}, {"name": "summary", "value": "'TEST SUM'"}, {"name": "contact_number", "value": "8123979546.0"}, {"name": "description", "value": "'DESC TEST'"}], "start": 1639383475561, "stop": 1639383592713, "uuid": "dfdda9e9-1aa4-41c0-8aa6-93ef6926f06a", "historyId": "543f5555524121ea7a09d9c02d2bd14e", "testCaseId": "07b2cdbe5c3a09e3f1c7259a9601993e", "fullName": "TestCases.test_Request_Module_End_User.TestRequestModuleEndUser#test_request_module_end_user", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_Request_Module_End_User"}, {"name": "subSuite", "value": "TestRequestModuleEndUser"}, {"name": "host", "value": "X7E062921133115"}, {"name": "thread", "value": "74254-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_Request_Module_End_User"}]}